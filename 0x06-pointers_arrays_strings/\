#include "main.h"
#include <stdio.h>

/**
 *
 *
 */

int _strlen(char *str)
{
	int i;
	int lenght = 0;

	for (i = 0; str[i] != '\0'; i++)
	{
		lenght++;
	}
	return (lenght);
}

char* infinite_add(char *n1, char *n2, char *r, int size_r)
{
	int n1_len, n2_len, k, n1_num, n2_num, sum;
	int remainder = 0;
	int i = 0;
	int j = 0;	
	char *swap;

	n1_len = _strlen(n1);
	n2_len = _strlen(n2);
	/* make n1 to always point to the largest number */
	if (n2_len > n1_len)
	{
		/* swap the pointers */
		swap = n1;
		n1 = n2;
		n2 = swap;
		/* swap the lenght of the strings */
		k = n1_len;
		n1_len = n2_len;
		n2_len = k; 
	}
	if (size_r > n1_len + 1)
	{
		for (i = (n1_len - 1); i >= 0; i--)
		{
			/* decreament n2_len by 1 and check if n2_len is greater or equals to zero  */
			n2_len--;
			if (n2_len >= 0)
			{
				n1_num = n1[i] - '0';
				n2_num = n2[n2_len] - '0';
				sum = n1_num + n2_num + remainder;
				remainder = 0;
				if (sum >= 10)
				{
					*(r + j) = (sum % 10) + '0';
					remainder = sum / 10;
				}
				else
				{
					*(r + j) = sum + '0';
				}
			}
			else
			{
				n1_num = n1[i] - '0';
				sum = n1_num + remainder;
				remainder = 0;
				if (sum >= 10)
				{
					*(r + j) = (sum % 10) + '0';
					remainder = sum / 10;
				}
				else
				{
					*(r + j) = sum + '0';
				}
			}
			j++;
		}
		if (remainder)
			*(r + j) = remainder + '0';
	}
	else
	{
		return (0);	
	}
	return (r);
}
